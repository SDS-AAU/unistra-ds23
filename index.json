[{"uri":"https://sds-aau.github.io/unistra-ds23/01_networks/1_networks/","title":"Basics Network Analysis","tags":[],"description":"","content":" Use the tabs to access content. Theory part is general, R \u0026amp; Python application part language specific.\nThis session introduces unsupervised machine learning (UML)\nRecommended Datacamp exercises: Introduction to network Analysis in Python Introduction to network Analysis in R Theory: Network Analysis R Application - Network Analysis Python Application - Network Analysis Video Slides Use arrows keys on keyboard to navigate. Alternatively fullscreen slides available here Follow along HTML Notebook Colab Notebook Video 1: Intro \u0026 Ecosystem Video 2: Network Measures/h2\u003e Video 3: Mini-Case/h2\u003e Follow along Colab Notebook Video 1: Intro \u0026 Ecosystem Video 2: Network Measures Video 3: Mini-Case "},{"uri":"https://sds-aau.github.io/unistra-ds23/03_workshops/01_workshop_nw/","title":"Day 1 - Networks","tags":[],"description":"","content":"Practical info Time: 8:00 - 12\nSchedule for the day Time Activity Data Session 1 8:00-9:00 Warmup Network Exercise Session 2 9:15-10:30 Network exploration Danish power elites Session 3 10:45-12:00 European AI Companies EU AI Startups Warm up: Manager Networks Introduction In this exercise, you will replicate a well known network analysis, with different data and some twists. Data: The data is to be found at: https://github.com/SDS-AAU/SDS-master/tree/master/00_data/network_krackhard (Hint: You neet to download the raw data) Data: What do I get? Let the fun begin. You will analyze network datacollected from the managers of a high-tec company. This dataset, originating from the paper below, is widely used in research on organizational networks. Time to give it a shot as well. Krackhardt D. (1987). Cognitive social structures. Social Networks, 9, 104-134. The company manufactured high-tech equipment on the west coast of the United States and had just over 100 employees with 21 managers. Each manager was asked to whom do you go to for advice and who is your friend, to whom do you report was taken from company documents. Description\nThe dataset includes 4 files - 3xKrack-High-Tec and 1x High-Tec-Attributes. Krack-High-Tec includes the following three 21x3 text matrices:\nADVICE, directed, binary FRIENDSHIP, directed, binary REPORTS_TO, directed, binary Column 1 contains the ID of the ego (from where the edge starts), and column 2 the alter (to which the edge goes). Column 3 indicates the presence (=1) or absence (=0) of an edge.\nHigh-Tec-Attributes includes one 21x4 valued matrix.\nID: Numeric ID of the manager AGE: The managers age (in years) TENURE: The length of service or tenure (in years) LEVEL: The level in the corporate hierarchy (coded 1,2 and 3; 1 = CEO, 2 = Vice President, 3 = manager) DEPT: The department (coded 1,2,3,4 with the CEO in department 0, ie not in a department) Tasks 1. Create a network Generate network objects for the companies organizational structure (reports to), friendship, advice This networks are generated from the corresponding edgelists Also attach node characteristics from the corresponding nodelist 2. Analysis Make a little analysis on:\nA: Network level characteristics. Find the overal network level of:\nDensity Transistivity (Clustering Coefficient) Reciprocity \u0026hellip; for the different networks. Describe and interpret the results. Answer the following questions:\nAre relationships like friendship and advice giving usually reciprocal? Are friends of your friends also your friends? Are the employees generally more likely to be in a friendship or advice-seeking relationship? B: Node level characteristics: Likewise, find out:\nWho is most popular in the networks. Who is the most wanted friend, and advice giver? Are managers in higher hirarchy more popular as friend, and advice giver? C: Relational Characteristics: Answer the following questions:\nAre managers from the same 1. department, or on the same 2. hirarchy, 3. age, or 4. tenuere more likely to become friends or give advice? (hint: assortiativity related) Are friends more likely to give each others advice? 3. Visualization Everything goes. Show us some pretty and informative plots. Choose what to plot, and how, on your own. Interpret the results and share some insights.\nDanish Power Elites Many people dream of being one of them, but only few make it all the way to the top. According to two CBS researchers, it takes more than just hard work to get to the top of the Danish hierarchy of power. read more\nIn this project we are going to construct and explore a network of Danish power elites derived from boards of various organisations in th country. We will construct an association network: Who is being in the same board? And first explore \u0026ldquo;basic\u0026rdquo; centrality indicators. Then identify communities and central persons within those. Finally we look at some \u0026ldquo;fancier\u0026rdquo; interactive network visualisation.\nContext: The Danish Power Elites Antons PhD Thesis Brief Summary of findings (CBS) Journal Paper in Sociology More to be found with googleling\u0026hellip; Data Github (R Repository) Magteliten website Or, easier\u0026hellip; on our github Tasks Who are the most central persons? Communities? What characterizes them? Link up with additional data? Notebooks Starter Final analysis EU Start-Ups In this exercise, we will analyze the company-link network of startups listed in the European AI Landscape. In a collaboration with istari.ai, we scraped links from all of their webpages, resulting in a dataset of around 1000 companies. Your task is to identify the key players in AI in Europe that extend beyond the initial list.\nNotebooks Starter EU AI companies starter "},{"uri":"https://sds-aau.github.io/unistra-ds23/info/","title":"Info, Schedule &amp; Co","tags":[],"description":"","content":"General info about the course.\nContent and voluntary exercises will be updated throughout the course, so check for updates.\nAll content will be provided in the following format:\nTheoretical part Application (in both R and Python) Notebook of application (with code) "},{"uri":"https://sds-aau.github.io/unistra-ds23/info/01_infrastructure/","title":"Infrastructure","tags":[],"description":"","content":"Material Datacamp: Get access to all the Datacamp premium content for free to facilitate your data science journey. Github Provides internet hosting for software development and version control using Git. It offers the distributed version control and source code management (SCM) functionality of Git, plus its own features. It is also commonly used to host open-source projects, including data science projects. If you do not have it already, you are advice to create an account to manage and showcase your work during this semester. A brief introduction into the main functionalists can be found here. "},{"uri":"https://sds-aau.github.io/unistra-ds23/02_nlp/0_nlp_theory/","title":"Natural Language Processing - Theory","tags":[],"description":"","content":"In this part you\u0026rsquo;ll get a 100% code-free intro to (statistical) Natural Language Processing\nRecommended Datacamp exercises: Python Intro to NLP Python - also good Feature Engineering for NLP in Python R Introduction to Natural Language Processing in R NLP intro - level of analysis Text representation From BoW to Topic Modeling and Embeddings (optional) History of NLP in Industry - Yoav Goldberg "},{"uri":"https://sds-aau.github.io/unistra-ds23/02_nlp/1_nlp_string/","title":"Application: String Manipulation","tags":[],"description":"","content":" Use the tabs to access content. Theory part is general, R \u0026amp; Python application part language specific.\nR Application - String Manipulation Python Application - String Manipulation Follow along HTML Notebook Video Follow along Colab Notebook Video 1 Video 2 "},{"uri":"https://sds-aau.github.io/unistra-ds23/03_workshops/02_workshop_nlp/","title":"Day 2 - NLP","tags":[],"description":"","content":" Corgies doing NLP - Medieval Fresco. 2022. Roman x Stable Diffusion\nPractical info Place: A 330 - Idem-Lab Time: 8:00-13:00 \u0026amp; 14:00-19:00 (variable breaks)\n8:00-13:00 \u0026amp; 14:00-19:00 (with breaks)\nSchedule for the day Session 1: Intro to applied NLP from word-counts to GPT. Session 2: Training simple classificaiton models Session 3: Exploring topics in a larger corpus Session 4: Semantic similarity \u0026amp; search Session 5: Domain transfer - Linking Science \u0026amp; Tech. documents Session 6: Quick intro to huggingface \u0026amp; transformers Resources LDA Topic Modeling Tutorial BERTopic Topic Modeling Tutorial Semantic Similarity tutorial Intro to applied NLP Slides\nContext This assignment is based on data from this paper\nDavidson, T., Warmsley, D., Macy, M., \u0026amp; Weber, I. (2017, May). Automated hate speech detection and the problem of offensive language. In Proceedings of the international AAAI conference on web and social media (Vol. 11, No. 1, pp. 512-515).\nYou are given a collection of approximately 25k tweets that have been manually (human) annotated. class denotes: 0 - hate speech, 1 - offensive language, 2 - neither\nhttps://github.com/SDS-AAU/SDS-master/raw/master/M2/data/twitter_hate.zip\n1. Preprocessing and vectorizaion. Justify your choices and explain possible alternatives (e.g. removing stopwords, identifying bi/tri-grams, removing verbs or use of stemming, lemmatization etc.)\nCreate a bag-of-words representation, apply TF-IDF and dimensionality reduction (LSA-topic modelling alternatively simply PCA or SVD) to transform your corpus into a feature matrix. 2. Explore and compare the 2 \u0026ldquo;classes of interest\u0026rdquo; - hate speech vs offensive language. Can you see differences by using simple count-based approaches? Can you identify themes (aka clusters / topics) that are specific for one class or another? Explore them using, e.g. simple crosstabs - topic vs. class and to get more detailed insights within-cluster top (TF-IDF) terms. (This step requires preprocessed/tokenized inputs). 3. Build an ML model that can predict hate speech Use the ML pipeline (learned in M1) to build a classification model that can identify offensive language and hate speech. It is not an easy task to get good results. Experiment with different models on the two types of text-representations that you create in 2.\nBonus: Explore missclassified hate speech tweets vs those correctly predicted. Can you find specific patterns? Can you observe some topics that are more prevalent in those that the model identifies correcly?\nThe best-reported results for this dataset are.\nClass Precision 0 0.61 1 0.91 2 0.95 Overall 0.91 Notebook This notebook contains an extended solution.\nHate Speech Detection Context - Exercise: Presidential Debate 2020 Yes, we are going back in time to the Presidential Debate in the US 2020 - the time of lots of unhappy Tweeting. It\u0026rsquo;s just too good a dataset and case to let it go\u0026hellip;\nData Political tweets: https://github.com/SDS-AAU/SDS-master/raw/master/M2/data/pol_tweets.gz from https://github.com/alexlitel/congresstweets We\u0026rsquo;ve preprocessed a bit to make things easier. 1: Dems. 0: Rep.\nTweets around the time of the debate in oktober 20 (8000): https://github.com/SDS-AAU/SDS-master/raw/master/M2/data/pres_debate_2020.gz\nBoth datasets are in JSON format. Task: Build a classifier that can distinguish Dem/Rep tweets. Bonus: 1. Explore discussed topics; 2. find out what drives predictions.\nNotebook In-class-solution and add-ons (TM)\nPolitical Tweets Prediction Topic Modelling with LDA Modeling research on NLP from static bibliographic data and directly from OpenAlex Notebook\nDomain transfer This tutorial will guide you through the process of generating embedding representations for academic abstracts and patent texts. By using NLP techniques, we will be able to identify topics within scientific literature and generate search strings based on the extracted keywords using cTF-IDF method. Finally, we will search patent documents and identify related technologies using the Annoy library.\nNotebook\n"},{"uri":"https://sds-aau.github.io/unistra-ds23/01_networks/2_networks_intermediate/","title":"Intermediate Network Analysis","tags":[],"description":"","content":" Use the tabs to access content. Theory part is general, R \u0026amp; Python application part language specific.\nThis session introduces to slightly more advanced concepts in network analysis\nR Application - Intermediate Network Analysis Python Application - Intermediate Network Analysis Follow along HTML Notebook Notebook Colab Notebook Video 1 Follow along Colab Notebook Video 1: Intro Video 2: Case "},{"uri":"https://sds-aau.github.io/unistra-ds23/info/02_lecturers/","title":"Lecturers","tags":[],"description":"","content":"Daniel S. Hain Associate Professor in Innovation Studies and Data Science at Aalborg University. E-mail: dsh@business.aau.dk\nDaniel is an Associate Professor in Data Science \u0026amp; Innovation Economics at the Aalborg University Business School, where he leads the Data Science research track at the AI:Growth lab, and coordinates teaching at the Social Data Science (SDS) master specialization. His research is dedicated to the development and application of data-driven methods to map, understand, and predict technological change, and its causes and consequences for socioeconomic systems on various levels of aggregation. His current contextual focus is the dynamics of AI research and industry.\nHis research is featured in leading academic journals such as Research Policy, but also attracted attention and funding from the industry, and lead to price-winning applications. Daniel is actively engaged in initiatives to educate (social science) students and researchers, professionals, and policymakers in understanding, evaluating, and applying modern Data Science and Artificial Intelligence methods for data-driven decision making.\nAs part of the AI:DK project, he coordinates and leads AI proof-of-concept projects within industry. His team also develops enterprise and policy software solutions for IP search and technology mapping.\nRoman Jurowetzki Associate Professor in Innovation Studies and Data Science at Aalborg University. E-mail: roman@business.aau.dk\nI come from a crossdisciplinary social science background. After my master in innovation economics I was rather frustrated by the underutilization of unstructured data in the field of my PhD project. This was until I discovered Natural Language Processing in 2013. I have been utilizing text and other unstructured data ever since in my research. Recently that has beeen research related to mapping and understanding of complex technological ecosystems. Since 2018 together with Daniel Hain, I am coordinating the Social Data Science specialization at AAU, where we train business and social science students in the application of computational methods.\n"},{"uri":"https://sds-aau.github.io/unistra-ds23/02_nlp/2_nlp_longtext/","title":"Application: Working with long text","tags":[],"description":"","content":"Working with long text and extracting text elements Use the tabs to access content. Theory part is general, R \u0026amp; Python application part language specific.\nR Application - Working with long text Python Application - Working with long text Follow along HTML Notebook Video Follow along Colab Notebook can be watched at 1.5x 😉 Link to News-scraping tutorial in the notebook. "},{"uri":"https://sds-aau.github.io/unistra-ds23/01_networks/4_network_viz/","title":"Bonus - Network Visualization","tags":[],"description":"","content":"This session introduces to multimodel natwork analysis concepts\nR Application - Ventwork Visualization Follow along HTML Notebook Notebook Colab Notebook Video 1: Node and Edge Visualization Video 2: Graph Layouts "},{"uri":"https://sds-aau.github.io/unistra-ds23/01_networks/3_networks_2mode/","title":"Network 2-Mode","tags":[],"description":"","content":" Use the tabs to access content. Theory part is general, R \u0026amp; Python application part language specific.\nThis session introduces to multimodel natwork analysis concepts\nR Application -2-mode Network Analysis Python Application - -2-mode Network Analysis Follow along HTML Notebook Notebook Colab Notebook Video 1: Intro Video 2: Application Follow along Colab Notebook 1/a\u003e Colab Notebook 2 Video 1: Intro Video 2: Case "},{"uri":"https://sds-aau.github.io/unistra-ds23/01_networks/","title":"Network Analysis","tags":[],"description":"","content":"This chapter introduces you to network analysis and working with relational data.\n"},{"uri":"https://sds-aau.github.io/unistra-ds23/02_nlp/3_nlp_topic/","title":"Application: Vectorization and Topic Modelling","tags":[],"description":"","content":" Use the tabs to access content. Theory part is general, R \u0026amp; Python application part language specific.\nR Application Python Application Follow along HTML Notebook Follow along Colab Notebook Video Ecosystem Video Tutorial "},{"uri":"https://sds-aau.github.io/unistra-ds23/info/04_litetrature/","title":"Literature &amp; Resources","tags":[],"description":"","content":"While this course does not come with a list of mandatory readings, we will often refer to some central resources in R and python, which for the most part can always be accessed in a free and updated online version. We generally recommend you to use these amazing resources for problem-solving and further self-study on the topic.\nMain Literature These pieces of work can be seen as main references for data science using R and Python. We will frequently refer to selected chapters for further study.\nR Wickham, H., \u0026amp; Grolemund, G. (2016). R for data science: import, tidy, transform, visualize, and model data. O\u0026rsquo;Reilly Media, Inc. Online available here Baumer, B., Kaplan, D. \u0026amp; Horton, N. (2020) Modern Data Science with R (2nd Ed.). CRC Press Online available here Kuhn, M., Silge, J. (2020) Tidy Modeling with R Online available here Python VanderPlas, J. (2016). Python data science handbook: Essential tools for working with data. O\u0026rsquo;Reilly Media, Inc. Online available here Supplementary literature R R Markdown: The Definitive Guide Efficient R Programming Functional Programming in R (Stanford, Hadley) Exploring Enterprise Databases with R Further Ressources Data Science Cloud services Google Colab: Googles popular service for editing, running \u0026amp; sharing Jupyter notebooks (Only Python Kernel, but R kernel can be accessed via some tricks) Deepnote: New popular online notebook service with good integration to other services (Python, R \u0026amp; more) Kaggle: Also provides their own cloud-based service co create and run computational notebooks. Convenient, unlimited, but a bit slow (Pyhton, r ). Community Kaggle: Crowdsourced data science challanges. Nowadays also provides a vivid community where you find datasets, notebooks for all kind of data science exercises. Tools \u0026amp; Helpers rmd to ipynb converter ipynb to pdf converter "},{"uri":"https://sds-aau.github.io/unistra-ds23/02_nlp/","title":"Natural Language Processing","tags":[],"description":"","content":"This chapter introduces you to Natural Language Processing and how you can work with text data in machine learning pipelines.\n"},{"uri":"https://sds-aau.github.io/unistra-ds23/02_nlp/4_nlp_supervised/","title":"Application: Supervised ML and NLP","tags":[],"description":"","content":" Use the tabs to access content. Theory part is general, R \u0026amp; Python application part language specific.\nR Application Python Application Follow along HTML Notebook Note: Re-Purposed from another course Follow along Colab Notebook Video SLM Video Semantic Search "},{"uri":"https://sds-aau.github.io/unistra-ds23/info/05_final_assignment_nlp/","title":"NLP - Final Assignment","tags":[],"description":"","content":"Task Outline a problem relevant with economics, innovation studies, economic geography or related disciplines. Below some examples: Science-Technology Linking Literature mapping exercises Prediction of financial indicators (from text) Solve the problem (in part) using NLP methods, feel free to also integrate network analysis elements. You can work in groups of 2-3. Information Submission format: Github repository with well commented ipython notebook and readme.md. Deadline: 17.2.2022; 23:59 🤓 EXTENDED Submit link to github repository to Roman (roman@business.aau.dk) and/cc Daniel (dsh@business.aau.dk) Please write if you have further questions. "},{"uri":"https://sds-aau.github.io/unistra-ds23/03_workshops/","title":"Workshops","tags":[],"description":"","content":"Face2Face Workshops 30-31 Jan 2023\n"},{"uri":"https://sds-aau.github.io/unistra-ds23/00_exercises/","title":"Exercises","tags":[],"description":"","content":"Here you will find all the assignments for this module.\n"},{"uri":"https://sds-aau.github.io/unistra-ds23/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"https://sds-aau.github.io/unistra-ds23/","title":"Network Analysis and NLP 2022/23","tags":[],"description":"","content":"This page will represent the central hub for teaching material. At SDS we believe in the power of open science and open education. We make all our material available outside password protected university systems.\nContent and voluntary exercises will be updated throughout the course, so check for updates.\nAll content will be provided in the following format:\nTheoretical part Application (in both R and Python) Notebook of application (with code) "},{"uri":"https://sds-aau.github.io/unistra-ds23/tags/","title":"Tags","tags":[],"description":"","content":""}]